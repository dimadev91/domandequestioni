[  {"question": "What is a MaterialApp in Flutter?", "options": ["The main widget for a Flutter app providing structure and navigation", "A widget that displays only material design icons", "A widget to draw shapes on the screen", "A widget to manage state of child widgets"], "correctIndex": 0},
  {"question": "What does a StatelessWidget do?", "options": ["Can change its state dynamically", "Does not maintain any state, builds once", "Automatically handles user input", "Stores variables across screens"], "correctIndex": 1},
  {"question": "What does a StatefulWidget allow?", "options": ["A widget that can update its state during runtime", "A widget that never rebuilds", "A widget that only displays text", "A widget to create animations only"], "correctIndex": 0},
  {"question": "Which widget provides safe display area?", "options": ["Column", "Scaffold", "SafeArea", "Container"], "correctIndex": 2},
  {"question": "What is the main difference between Column and Row?", "options": ["Column arranges children vertically, Row horizontally", "Row arranges children vertically, Column horizontally", "Both are identical widgets", "Column is stateful, Row is stateless"], "correctIndex": 0},
  {"question": "What does Expanded widget do?", "options": ["Gives child widget remaining space in a Row/Column", "Wraps widgets without modifying size", "Centers widgets horizontally", "Creates a new Scaffold"], "correctIndex": 0},
  {"question": "Which widget can display an image from assets?", "options": ["Image.png", "Image.network", "Image.asset", "Column.image"], "correctIndex": 2},
  {"question": "Which operator checks if a value is null and provides a default?", "options": ["=>", "!=", "??", "||"], "correctIndex": 2},
  {"question": "What does the => operator do in Dart?", "options": ["Creates a shorthand function or getter", "Checks equality between values", "Assigns null if variable is undefined", "Creates a new widget"], "correctIndex": 0},
  {"question": "What does CrossAxisAlignment.center do in a Column?", "options": ["Aligns children in the center along the horizontal axis", "Aligns children vertically at the top", "Spreads children across the main axis", "Does nothing"], "correctIndex": 0},
  {"question": "What is the purpose of Scaffold in Flutter?", "options": ["Provides a basic visual layout structure for the app", "Manages state of child widgets", "Displays images from the network", "Handles animations"], "correctIndex": 0},
  {"question": "Which widget is used to wrap text with padding?", "options": ["Container", "Padding", "Align", "Expanded"], "correctIndex": 1},
  {"question": "What does MainAxisAlignment.spaceBetween do?", "options": ["Places space evenly between children along main axis", "Centers children on cross axis", "Stacks children on top of each other", "Does nothing"], "correctIndex": 0},
  {"question": "Which widget is used to constrain size and add decoration?", "options": ["Container", "Column", "Row", "Expanded"], "correctIndex": 0},
  {"question": "What is the default scroll direction of SingleChildScrollView?", "options": ["None", "Horizontal", "Diagonal", "Vertical"], "correctIndex": 3},
  {"question": "Which widget centers its child both horizontally and vertically?", "options": ["Center", "Align", "Container", "Column"], "correctIndex": 0},
  {"question": "What does crossAxisAlignment.stretch do?", "options": ["Expands children to fill cross axis", "Centers children vertically", "Aligns children at start", "Does nothing"], "correctIndex": 0},
  {"question": "Which widget is used to make tappable areas?", "options": ["GestureDetector", "InkWell", "Both A and B", "Container"], "correctIndex": 2},
  {"question": "Which widget prevents content from overlapping system UI?", "options": ["SafeArea", "Scaffold", "Container", "Expanded"], "correctIndex": 0},
  {"question": "Which operator checks inequality?", "options": ["!=", "==", "??", "=>"], "correctIndex": 0},
  {"question": "Which widget arranges children horizontally?", "options": ["Stack", "Column", "Row", "Container"], "correctIndex": 2},
  {"question": "Which widget arranges children vertically?", "options": ["Column", "Row", "Stack", "Container"], "correctIndex": 0},
  {"question": "Which widget allows overlapping children?", "options": ["Expanded", "Row", "Column", "Stack"], "correctIndex": 3},
  {"question": "What does Navigator.pushNamed do?", "options": ["Navigates to a named route", "Pushes a widget onto the widget tree", "Adds padding to widgets", "Centers a widget"], "correctIndex": 0},
  {"question": "Which widget allows flexible space in a Row or Column?", "options": ["Expanded", "Container", "Padding", "Align"], "correctIndex": 0},
  {"question": "Which widget displays a scrollable list of children?", "options": ["Scaffold", "Column", "ListView", "Container"], "correctIndex": 2},
  {"question": "What does the ternary operator ? : do?", "options": ["Selects between two values based on a condition", "Checks equality", "Creates a function", "Checks for null"], "correctIndex": 0},
  {"question": "Which keyword is used to define a constructor in Dart?", "options": ["return", "void", "ClassName()", "final"], "correctIndex": 2},
  {"question": "Which property of Image.asset sets its width?", "options": ["width", "size", "height", "scale"], "correctIndex": 0},
  {"question": "Which property of Container sets its background color?", "options": ["color", "background", "decoration", "fill"], "correctIndex": 0},
  {"question": "What is the main advantage of using `const` on widget constructors?", "options": ["It forces a UI update every frame.", "It allows the widget not to be rebuilt if its parameters do not change (compile-time constant).", "It is necessary only for StatefulWidget.", "It ensures that all parameters are nullable."], "correctIndex": 1},
  {"question": "Which `StatefulWidget` lifecycle method is called only once to initialize the state?", "options": ["dispose()", "build()", "initState()", "didUpdateWidget()"], "correctIndex": 2},
  {"question": "What does the `!` operator (non-null assertion operator) indicate in Dart?", "options": ["That the value is definitely null.", "It forces the type not to be nullable.", "It guarantees to the compiler that the value is not null and proceeds, otherwise it throws a runtime error.", "It is used only for boolean operations."], "correctIndex": 2},
  {"question": "Why is it crucial to use `WidgetsBinding.instance.addPostFrameCallback` for context-dependent operations?", "options": ["To execute code only in debug mode.", "To ensure the `context` is valid before performing the operation, such as after the first frame has rendered.", "To make all function calls asynchronous.", "To force an immediate rebuild of the entire widget tree."], "correctIndex": 1},
  {"question": "What is the main purpose of `InheritedWidget`?", "options": ["To manage page transitions (routing).", "To allow widgets in the sub-tree to access data efficiently (legacy state management).", "To create complex frame-level animations.", "To define the visual theme of the entire application."], "correctIndex": 1},
  {"question": "What happens if you call `setState()` inside the `build()` method of a `StatefulWidget`?", "options": ["An asynchronous rendering is performed.", "It enters an infinite loop of rebuilds.", "The application stops without error.", "`dispose()` is automatically called."], "correctIndex": 1},
  {"question": "What is the key difference between `StreamBuilder` and `FutureBuilder`?", "options": ["None, they are interchangeable.", "`FutureBuilder` handles a single asynchronous data, `StreamBuilder` handles a sequence of data over time.", "`FutureBuilder` is for networking, `StreamBuilder` is for local databases.", "`StreamBuilder` does not require `initialData`."], "correctIndex": 1},
  {"question": "Which widget is used as the 'glue' between standard Flutter widgets and Scroll protocol elements?", "options": ["CustomScrollView", "SliverList", "ListView.builder", "ScrollController"], "correctIndex": 0},
  {"question": "What is the meaning of the `late` keyword in Dart?", "options": ["It indicates a variable that can change its value at any time.", "It declares a variable that must be initialized before its first use, but not immediately at the time of declaration.", "It defines a run-time constant.", "It is used for factory constructors."], "correctIndex": 1},
  {"question": "In a state management system like Provider, which method allows a widget to access a value without rebuilding upon change?", "options": ["Provider.of(context)", "context.watch<T>()", "context.read<T>()", "context.select<T, R>()"], "correctIndex": 2},
  {"question": "Which widget is specifically designed to create headers that shrink or expand during scrolling?", "options": ["CustomScrollView", "SliverAppBar", "NestedScrollView", "FlexibleSpaceBar"], "correctIndex": 1},
  {"question": "Which of the following is not a basic drawing primitive in `CustomPainter`?", "options": ["Canvas.drawRect", "Canvas.drawCircle", "Canvas.drawImage", "Canvas.drawWidget"], "correctIndex": 3},
  {"question": "What does a `GlobalKey` manage in Flutter?", "options": ["It allows access to a widget's state from any point in the tree and permits widget repositioning.", "It is only used to identify elements in a list.", "It defines the primary color of the app.", "It is used to manage network dependencies."], "correctIndex": 0},
  {"question": "Which technique is preferable for managing a large number of elements in a `ListView`?", "options": ["Create all elements in advance in a static `ListView`.", "Use `ListView.builder` to rebuild only the visible elements (lazy rendering).", "Use a `SingleChildScrollView` without a child widget.", "Wrap the `ListView` in an `Expanded`."], "correctIndex": 1},
  {"question": "Which class in Dart is the ancestor of all non-nullable types?", "options": ["Dynamic", "Void", "Object", "Null"], "correctIndex": 2},
  {"question": "Why shouldn't `MediaQuery.of(context)` be called directly in the `build` method of the root widget?", "options": ["Because the `build` method does not have access to the `context`.", "Because the root widget's `context` is not yet fully mounted and may throw a dependency error.", "Because the screen size value will never change.", "To avoid an overflow error."], "correctIndex": 1},
  {"question": "Which Flutter class provides access to the element tree, including the theme and navigation?", "options": ["Widget", "BuildOwner", "BuildContext", "Element"], "correctIndex": 2},
  {"question": "What is the role of the `Key` in Flutter widgets (local or global)?", "options": ["Used only for navigation between pages.", "Used by Flutter's diff algorithm (reconciliation) to uniquely identify elements moving in the tree.", "Defines the minimum height of a widget.", "Used to set the default font."], "correctIndex": 1},
  {"question": "Which widget allows managing the native back-end when interacting with the platform communication channel?", "options": ["MethodChannel", "EventChannel", "BasicMessageChannel", "All of the above"], "correctIndex": 3},
  {"question": "What is an 'Isolate' in Dart?", "options": ["An object that manages a widget's state.", "A separate memory heap that allows executing Dart code in parallel without shared state (no shared memory).", "A widget for managing navigation.", "A generic data type."], "correctIndex": 1},
  {"question": "Which property of a `CustomScrollView` allows defining elastic headers that behave differently during scrolling?", "options": ["controller", "slivers", "physics", "shrinkWrap"], "correctIndex": 1},
  {"question": "In a `StatefulWidget`, in which method should you clean up resources like `Timer`s or `StreamSubscription`s?", "options": ["initState()", "build()", "dispose()", "didChangeDependencies()"], "correctIndex": 2},
  {"question": "Which widget is designed to display an icon and text together, especially in lists or menus?", "options": ["Container", "ListTile", "Row", "Expanded"], "correctIndex": 1},
  {"question": "Which Flutter API is typically used for internationalization (I18n)?", "options": ["Flutter Localizations", "Device Manager", "BuildContext.i18n", "MaterialApp.language"], "correctIndex": 0},
  {"question": "Which widget should you use if you need a layout that allows widgets to 'wrap' to the next line if there is no more space?", "options": ["Row", "Wrap", "Column", "Stack"], "correctIndex": 1},
  {"question": "Which syntax is correct for declaring a `factory constructor` in Dart?", "options": ["ClassName factory();", "factory ClassName() => ...", "ClassName.factory()", "factory ClassName();"], "correctIndex": 1},
  {"question": "Which widget is primarily responsible for managing 'safe areas' (notches, status bars) on the screen?", "options": ["Scaffold", "SafeArea", "Container", "AppBar"], "correctIndex": 1},
  {"question": "What does the `LayoutBuilder` do in Flutter?", "options": ["It defines navigation based on the route.", "It allows rebuilding widgets based on the maximum constraints it receives from the parent widget (e.g., maximum width).", "It controls the scrolling of a list.", "It applies a fade effect to an image."], "correctIndex": 1},
  {"question": "Which `StatefulWidget` method is called when the widget receives a new set of data from a parent widget?", "options": ["initState()", "build()", "didUpdateWidget()", "didChangeDependencies()"], "correctIndex": 2},
  {"question": "What is the role of the `Paint` object in a `CustomPainter`?", "options": ["It defines the area to draw in.", "It stores style information to be applied to the drawing (color, stroke, etc.).", "It manages user input.", "It contains the data to be displayed."], "correctIndex": 1},
  {"question": "Which widget is used to create a scrolling experience with two scrollable areas that share an header?", "options": ["CustomScrollView", "NestedScrollView", "SingleChildScrollView", "TabBarView"], "correctIndex": 1},
  {"question": "What is the difference between `final` and `const` for class variables in Dart?", "options": ["They are identical and interchangeable.", "`const` must be known at compile time (compile-time constant), `final` is assigned only once during execution (run-time constant).", "`final` can be reassigned, `const` cannot.", "`const` is for primitives, `final` is for objects."], "correctIndex": 1},
  {"question": "Which widget is the alternative to `InheritedWidget` for local or sub-section state management?", "options": ["ValueListenableBuilder", "StreamBuilder", "FutureBuilder", "All of the above"], "correctIndex": 0},
  {"question": "Which `Navigator` method should you use to remove all screens from the stack except the destination screen?", "options": ["push()", "pushReplacement()", "pop()", "pushAndRemoveUntil()"], "correctIndex": 3},
  {"question": "Which widget is specifically designed to create a consistent user experience with tab-based navigation?", "options": ["TabBar", "TabBarView", "DefaultTabController", "All of the above"], "correctIndex": 3},
  {"question": "What is the main problem that the `await` keyword solves in Dart?", "options": ["It handles exceptions.", "It avoids blocking the main thread (UI) while waiting for an asynchronous operation to complete.", "It ensures that the code runs in parallel.", "It declares a non-nullable variable."], "correctIndex": 1},
  {"question": "In Flutter, what does the 'Semantic layer' indicate?", "options": ["The tree of visible widgets.", "A layer for accessibility, to support screen readers and other assistive services.", "The layer that manages layout.", "The layer that manages animations."], "correctIndex": 1},
  {"question": "What is the correct way to reference an immediate parent widget in the tree that is an `InheritedWidget`?", "options": ["A Widget().getParent()", "Ancestor.of(context)", "MyInheritedWidget.of(context)", "context.ancestorWidget()"], "correctIndex": 2},
  {"question": "Which `StatefulWidget` method is called immediately after `initState()`?", "options": ["build()", "dispose()", "didChangeDependencies()", "didUpdateWidget()"], "correctIndex": 2},
  {"question": "What is the main difference between `Padding` and `Container` for adding space?", "options": ["They are identical.", "`Container` has the `padding` property and supports `margin` and `decoration`, `Padding` is only for internal space.", "`Padding` is always expanded, `Container` is not.", "`Container` is for external space, `Padding` for internal space."], "correctIndex": 1},
  {"question": "Which class in Dart is used to handle errors in an `async` block?", "options": ["try-catch", "switch-case", "if-else", "throw-catch"], "correctIndex": 0},
  {"question": "What do 'Slivers' manage in Flutter?", "options": ["Only parallax effects in lists.", "A portion of a scrollable area, used to create complex and performant scrolling layouts.", "Text input.", "The native back-end."], "correctIndex": 1},
  {"question": "Which property of a `CustomScrollView` defines whether the scroll area starts from the bottom or the top?", "options": ["scrollDirection", "reverse", "physics", "controller"], "correctIndex": 1},
  {"question": "Which `StatefulWidget` method is called when a widget needs to rebuild?", "options": ["initState()", "dispose()", "build()", "didChangeDependencies()"], "correctIndex": 2},
  {"question": "Which widget is used to make content that exceeds parent boundaries visible and manageable, often with overflow and clipping?", "options": ["Stack", "OverflowBox", "Container", "ClipRect"], "correctIndex": 1},
  {"question": "What is the purpose of the 'Ticker' in Flutter?", "options": ["To manage application state.", "It provides a notification signal at regular intervals (usually frame rate) for animation operation.", "To control navigation.", "To allow keyboard input."], "correctIndex": 1},
  {"question": "Which property of `ListView.builder` improves performance for very long lists?", "options": ["itemCount", "itemBuilder", "separatorBuilder", "physics"], "correctIndex": 1},
  {"question": "Which type of `Key` is used to maintain the state of a widget when it is moved in the tree, but only within the same parent?", "options": ["GlobalKey", "ObjectKey", "ValueKey", "None"], "correctIndex": 2},
  {"question": "Which widget is designed to display content in cards with rounded corners and shadow?", "options": ["Container", "Card", "Padding", "Material"], "correctIndex": 1},
  {"question": "What is the role of the `BuildContext` in Flutter?", "options": ["It defines the global theme and style.", "It is a handle for a widget's location in the widget tree, providing access to services and ancestors (like `Theme.of(context)`).", "It contains a widget's state data.", "It manages user input."], "correctIndex": 1},  
    {"question":"Which widget allows stacking widgets with positioned children?","options":["Stack with Positioned","Column","Row","Container"],"correctIndex":0},
    {"question":"Which property sets text color in TextStyle?","options":["color","fontSize","fontWeight","decoration"],"correctIndex":0},
    {"question":"Which operator checks equality in Dart?","options":["==","!=","<",">"],"correctIndex":0},
    {"question":"Which operator is used to assign a default value if null?","options":["??","==","!=","=>"],"correctIndex":0},
    {"question":"Which property sets border radius in Container decoration?","options":["borderRadius","padding","margin","alignment"],"correctIndex":0},
    {"question":"Which widget allows multiple children in a single scrollable column?","options":["ListView","Column","Row","Container"],"correctIndex":0},
    {"question":"Which widget is used to add a bottom navigation bar?","options":["BottomAppBar","AppBar","Container","Column"],"correctIndex":0},
    {"question":"Which widget allows you to detect swipe gestures?","options":["GestureDetector","Container","Column","Row"],"correctIndex":0},
    {"question":"Which widget is used to show an image from assets?","options":["Image.asset","Image.network","Container","Text"],"correctIndex":0},
    {"question":"Which property sets font size in TextStyle?","options":["fontSize","color","fontWeight","decoration"],"correctIndex":0},
    {"question":"Which widget can overlap children in a z-axis manner?","options":["Stack","Column","Row","Container"],"correctIndex":0},
    {"question":"Which widget is used for responsive layout that expands?","options":["Expanded","Container","Column","Row"],"correctIndex":0},
    {"question":"Which method initializes state in StatefulWidget?","options":["initState()","build()","setState()","dispose()"],"correctIndex":0},
    {"question":"Which method is called when a StatefulWidget is removed?","options":["dispose()","initState()","build()","setState()"],"correctIndex":0},
    {"question":"Which widget allows conditional rendering with a single child?","options":["Visibility","Expanded","Container","Row"],"correctIndex":0},
    {"question":"Which property defines the main axis in Row or Column?","options":["mainAxisAlignment","crossAxisAlignment","alignment","padding"],"correctIndex":0},
    {"question":"Which property in Container defines alignment of its child?","options":["alignment","padding","margin","color"],"correctIndex":0},
    {"question":"Which operator is used for fat arrow syntax in Dart?","options":["=>","??","!=","=="],"correctIndex":0},
    {"question":"Which widget is used to create a divider line?","options":["Divider","Container","SizedBox","Column"],"correctIndex":0},
    {"question":"Which widget allows rounded corners and shadows?","options":["Card","Container","Column","Row"],"correctIndex":0},
    {"question":"Which widget is used to display a list of items efficiently?","options":["ListView.builder","Column","Row","Container"],"correctIndex":0},
    {"question":"Which property in Icon sets its color?","options":["color","size","alignment","padding"],"correctIndex":0},
    {"question":"Which widget provides spacing around children?","options":["Padding","SizedBox","Container","Expanded"],"correctIndex":0},
    {"question": "Which widget displays a list of items in a scrolling view?", "options": ["ListView", "Column", "GridView", "Stack"], "correctIndex": 0},
    {"question": "What widget is used to make a widget tappable?", "options": ["GestureDetector", "InkWell", "Container", "Padding"], "correctIndex": 1},
    {"question": "Which widget is used for aligning children widgets?", "options": ["Align", "Center", "Row", "Column"], "correctIndex": 0},
    {"question": "What does the 'debugShowCheckedModeBanner' property do?", "options": ["Shows a debug banner in checked mode", "Shows a splash screen", "Enables debug logging", "Stops the app from crashing"], "correctIndex": 0},
    {"question": "Which widget can be used to show a simple floating action button?", "options": ["FloatingActionButton", "RaisedButton", "IconButton", "FlatButton"], "correctIndex": 0},
    {"question": "Which of the following widgets does not provide scrolling capabilities?", "options": ["Container", "ListView", "SingleChildScrollView", "GridView"], "correctIndex": 0},
    {"question": "What does the 'shrinkWrap' property do in a ListView?", "options": ["Makes the ListView wrap its content", "Makes ListView scroll horizontally", "Disables scrolling", "Makes the ListView static"], "correctIndex": 0},
    {"question": "What is the purpose of the 'Expanded' widget?", "options": ["Expands the child to fill available space", "Shrinks the child to fit content", "Adds padding to the widget", "Centers the child widget"], "correctIndex": 0},
    {"question": "Which widget is used to build complex user interfaces?", "options": ["CustomPaint", "MaterialApp", "Scaffold", "FlutterLogo"], "correctIndex": 2},
    {"question": "What is the main purpose of the 'Navigator' widget?", "options": ["Managing screen transitions", "Handling state", "Displaying images", "Controlling layout"], "correctIndex": 0},
    {"question": "What does the 'Container' widget allow you to do?", "options": ["Customize size, decoration, and padding", "Make widgets tappable", "Create animations", "Display static images"], "correctIndex": 0},
    {"question": "What is a common way to pass data between Flutter screens?", "options": ["Using Navigator.push and passing arguments", "Using GlobalKey", "Using InheritedWidget", "By passing stateful widgets directly"], "correctIndex": 0},
    {"question": "What does the 'setState' method do in Flutter?", "options": ["Triggers a re-render of a StatefulWidget", "Sets initial state of a widget", "Sets widget properties", "Checks if widget needs to be rebuilt"], "correctIndex": 0},
    {"question": "What does the 'safeArea' widget do?", "options": ["Ensures content is not obstructed by system UI", "Wraps widgets with a custom border", "Handles scrolling automatically", "Centers widgets horizontally"], "correctIndex": 0},
    {"question": "Which widget is used to align widgets both horizontally and vertically?", "options": ["Center", "Align", "Container", "Row"], "correctIndex": 0},
    {"question": "What does the 'Row' widget do?", "options": ["Arranges children horizontally", "Arranges children vertically", "Stacks children on top of each other", "Displays images in a grid"], "correctIndex": 0},
    {"question": "Which widget can make a container with rounded corners?", "options": ["Container with BoxDecoration", "Text", "Column", "Row"], "correctIndex": 0},
    {"question": "What is the purpose of the 'Flexible' widget?", "options": ["Allows a child to fit within a Row or Column", "Displays widgets with equal width", "Shrinks widgets", "Centers children"], "correctIndex": 0},
    {"question": "What does the 'ListView.builder' constructor do?", "options": ["Creates a scrolling list with dynamic content", "Builds a simple static list", "Displays a list in a grid", "Displays a list of static widgets"], "correctIndex": 0},
    {"question": "What is the use of 'ThemeData' in Flutter?", "options": ["Defines the visual properties of the app", "Handles user input", "Creates custom widgets", "Manages state across the app"], "correctIndex": 0},
    {"question": "Which widget is used to create a scrollable container?", "options": ["SingleChildScrollView", "Column", "Container", "Padding"], "correctIndex": 0},
    {"question": "What does the 'Text' widget display?", "options": ["Displays a string of text", "Displays an image", "Displays a button", "Displays an icon"], "correctIndex": 0},
    {"question": "What is a 'StreamBuilder' used for in Flutter?", "options": ["Building widgets based on stream data", "Displaying data in a list", "Showing images in a list", "Handling network requests"], "correctIndex": 0},
    {"question": "What is 'InheritedWidget' used for?", "options": ["Passing data down the widget tree", "Rendering a list of items", "Displaying images", "Managing state of widgets"], "correctIndex": 0},
    {"question": "What is the 'default' state of a widget in Flutter?", "options": ["The widget's properties and initial state", "The first frame of the widget", "The user's first interaction with the widget", "A static value"], "correctIndex": 0},
    {"question": "Which widget is used to create a scrollable grid of items?", "options": ["GridView", "ListView", "Column", "Stack"], "correctIndex": 0},
    {"question": "Which widget allows you to build a dynamic form?", "options": ["Form", "Column", "Row", "Stack"], "correctIndex": 0},
    {"question": "Which of the following widgets allows for animation?", "options": ["AnimatedContainer", "Column", "Scaffold", "SafeArea"], "correctIndex": 0},
    {"question": "What does the 'MediaQuery' class provide?", "options": ["Provides information about the screen size and device", "Manages app navigation", "Manages stateful widgets", "Displays a loading indicator"], "correctIndex": 0},
    {"question": "Which widget is used to make an image resizable?", "options": ["Image", "Image.asset", "Image.network", "ClipRRect"], "correctIndex": 1},
    {"question": "What does 'TextFormField' widget do?", "options": ["Allows text input from the user", "Displays static text", "Shows a button", "Displays a form"], "correctIndex": 0},
    {"question": "Which property is used to change the padding of a widget?", "options": ["padding", "margin", "alignment", "decorations"], "correctIndex": 0},
    {"question": "What does the 'clipBehavior' property of a widget do?", "options": ["Controls how the widget clips its child", "Adds a shadow to the widget", "Aligns the widget", "Makes the widget scrollable"], "correctIndex": 0},
    {"question": "What is the default behavior of 'TextField' widget?", "options": ["Allows text input", "Displays a label", "Creates a password input", "Shows an icon"], "correctIndex": 0},
    {"question": "Which widget can be used to make a widget clickable?", "options": ["GestureDetector", "InkWell", "Container", "Column"], "correctIndex": 1},
    {"question": "Which of these widgets is used to display simple button-like widgets?", "options": ["FlatButton", "Container", "Column", "Row"], "correctIndex": 0},
    {"question": "What does the 'Scrollable' widget do?", "options": ["Makes content scrollable", "Renders widgets", "Puts widgets into a grid", "Stacks widgets on top of each other"], "correctIndex": 0},
    {"question": "What does the 'Spacer' widget do?", "options": ["Creates empty space in a layout", "Aligns widgets", "Displays an image", "Manages state"], "correctIndex": 0},
    {"question": "Which widget is used to display content that fills the entire screen?", "options": ["Scaffold", "Container", "Column", "Expanded"], "correctIndex": 0},
    {"question": "What is the main role of the 'Drawer' widget?", "options": ["Provides a slide-out navigation panel", "Displays a logo", "Adds a list of options", "Creates a new page"], "correctIndex": 0},
    {"question": "Which widget should you use to customize the app's navigation?", "options": ["Navigator", "Drawer", "TabBar", "PageView"], "correctIndex": 0},

        {"question": "What does the 'MaterialPageRoute' do?", "options": ["It creates a route to navigate to another screen", "It displays a loading screen", "It defines the app's theme", "It controls screen orientation"], "correctIndex": 0},
        {"question": "Which widget is used to create a flexible space in an app bar?", "options": ["FlexibleSpaceBar", "SliverAppBar", "AppBar", "Expanded"], "correctIndex": 1},
        {"question": "What is the default value for the 'mainAxisAlignment' property in a Column?", "options": ["MainAxisAlignment.start", "MainAxisAlignment.center", "MainAxisAlignment.spaceBetween", "MainAxisAlignment.end"], "correctIndex": 0},
        {"question": "Which widget can display a list of widgets in a grid format?", "options": ["GridView", "ListView", "Column", "Stack"], "correctIndex": 0},
        {"question": "What does the 'showDialog' function do in Flutter?", "options": ["Displays a dialog box", "Pushes a new route", "Shows a snack bar", "Displays an alert box"], "correctIndex": 0},
        {"question": "What does the 'ValueListenableBuilder' widget do?", "options": ["Listens for changes to a ValueNotifier", "Updates a widget based on the user's input", "Displays a list of items", "Creates a scrollable container"], "correctIndex": 0},
        {"question": "Which property of a 'Container' widget is used to apply a shadow?", "options": ["boxShadow", "decoration", "padding", "alignment"], "correctIndex": 0},
        {"question": "Which widget is used to create a sticky header in a scrollable list?", "options": ["SliverAppBar", "ListView", "Stack", "Container"], "correctIndex": 0},
        {"question": "What is the main purpose of the 'FutureBuilder' widget?", "options": ["It builds a widget based on the result of a Future", "It creates a list of widgets", "It builds a widget for each item in a list", "It animates widgets"], "correctIndex": 0},
        {"question": "Which widget allows you to show a circular progress indicator?", "options": ["CircularProgressIndicator", "LinearProgressIndicator", "ProgressBar", "LoadingSpinner"], "correctIndex": 0},
        {"question": "What does the 'onPressed' property in a 'FlatButton' do?", "options": ["Defines the function to be executed when the button is pressed", "Sets the button's color", "Defines the button's size", "Sets the button's text"], "correctIndex": 0},
        {"question": "What does the 'AnimatedContainer' widget do?", "options": ["Animates the properties of a container", "Creates a new route", "Changes a widget's position", "Handles tap gestures"], "correctIndex": 0},
        {"question": "What is the purpose of the 'Scaffold' widget?", "options": ["Provides a structure for the app layout", "Displays a logo", "Hides the app bar", "Renders a widget in a container"], "correctIndex": 0},
        {"question": "Which property of 'Text' widget is used to define the text color?", "options": ["style", "color", "decoration", "fontSize"], "correctIndex": 1},
        {"question": "What is the default alignment for widgets in a Column?", "options": ["Start", "Center", "End", "Stretch"], "correctIndex": 0},
        {"question": "Which widget should you use to create a gradient background?", "options": ["Container with BoxDecoration", "Column", "Row", "Stack"], "correctIndex": 0},
        {"question": "Which property of the 'Container' widget controls its size?", "options": ["width and height", "padding", "alignment", "decoration"], "correctIndex": 0},
        {"question": "What does the 'FlutterLogo' widget display?", "options": ["Flutter logo", "App logo", "A static image", "A clickable icon"], "correctIndex": 0},
        {"question": "Which widget is used to create a scrollable list that arranges items in rows and columns?", "options": ["GridView", "ListView", "Column", "Row"], "correctIndex": 0},
        {"question": "What does the 'Wrap' widget do?", "options": ["Arranges children in horizontal or vertical lines, wrapping when space is filled", "Aligns children", "Displays children in a list", "Displays children in a grid"], "correctIndex": 0},
        {"question": "Which widget is used to apply a border to a widget?", "options": ["BoxDecoration", "Container", "Padding", "Align"], "correctIndex": 0},
        {"question": "Which of the following is used to create a drawer navigation menu?", "options": ["Drawer", "AppBar", "SliverList", "Column"], "correctIndex": 0},
        {"question": "What does the 'Navigator.pop' function do?", "options": ["Closes the current screen", "Shows a new screen", "Displays a dialog", "Stops the app"], "correctIndex": 0},
        {"question": "What widget should you use to display text with multiple styles?", "options": ["RichText", "Text", "Column", "Row"], "correctIndex": 0},
        {"question": "Which widget is used to define an app's theme?", "options": ["ThemeData", "Scaffold", "MaterialPageRoute", "Column"], "correctIndex": 0},
        {"question": "What does the 'Column' widget do?", "options": ["Arranges children vertically", "Arranges children horizontally", "Stacks children", "Creates a scrollable view"], "correctIndex": 0},
        {"question": "What does the 'Row' widget do?", "options": ["Arranges children horizontally", "Arranges children vertically", "Stacks children", "Creates a scrollable view"], "correctIndex": 0},
        {"question": "Which widget is used to add padding around a widget?", "options": ["Padding", "Margin", "Align", "Container"], "correctIndex": 0},
        {"question": "What does the 'GestureDetector' widget do?", "options": ["Detects gestures such as taps and drags", "Aligns widgets", "Creates a scrollable area", "Displays text"], "correctIndex": 0},
        {"question": "Which widget is used to add space between widgets in a layout?", "options": ["SizedBox", "Padding", "Column", "Row"], "correctIndex": 0},
        {"question": "What does the 'Stack' widget do?", "options": ["Stacks widgets on top of each other", "Aligns widgets", "Arranges widgets in a column", "Displays widgets horizontally"], "correctIndex": 0},
        {"question": "Which property of 'Column' widget arranges children widgets?", "options": ["mainAxisAlignment", "crossAxisAlignment", "padding", "decoration"], "correctIndex": 0},
        {"question": "Which of these widgets creates a button with material ripple effect?", "options": ["InkWell", "FlatButton", "IconButton", "RaisedButton"], "correctIndex": 0},
        {"question": "Which property of a 'TextField' widget allows you to set a placeholder text?", "options": ["hintText", "labelText", "controller", "style"], "correctIndex": 0},
        {"question": "Which widget is used to create a draggable widget?", "options": ["Draggable", "Container", "GestureDetector", "Stack"], "correctIndex": 0},
        {"question": "What does the 'ClipRRect' widget do?", "options": ["Rounds the corners of a widget", "Aligns a widget", "Creates a circular widget", "Displays a widget in a grid"], "correctIndex": 0},
        {"question": "Which widget is used to create a scrollable list of images?", "options": ["ListView", "Column", "Stack", "GridView"], "correctIndex": 0},
        {"question": "What is the main use of the 'StatefulWidget' class?", "options": ["Widgets that can change their state over time", "Widgets that do not need to be rebuilt", "Widgets that display static content", "Widgets that handle layout issues"], "correctIndex": 0},
        {"question": "Which of the following is the primary use of 'SliverList'?", "options": ["Displaying a list of widgets that can scroll", "Aligning widgets in a column", "Displaying widgets in a grid", "Creating a background for the app"], "correctIndex": 0},
        {"question": "What does 'TabBar' do?", "options": ["Displays tabs for navigation", "Displays a list of items", "Displays a banner", "Displays a dropdown list"], "correctIndex": 0},
        {"question": "Which widget is used to show a simple alert box?", "options": ["AlertDialog", "SnackBar", "Dialog", "PopupMenuButton"], "correctIndex": 0},
        {"question": "Which widget can make content scrollable both horizontally and vertically?", "options": ["SingleChildScrollView", "ListView", "GridView", "Container"], "correctIndex": 0}
        ]
      


