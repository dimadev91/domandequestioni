[  {"question": "Qual è il principale vantaggio di usare `const` sui costruttori dei widget?", "options": ["Forza un aggiornamento dell'UI ad ogni frame.", "Permette al widget di non essere ricostruito se i suoi parametri non cambiano (compile-time constant).", "È necessario solo per i StatefulWidget.", "Assicura che tutti i parametri siano nullable."], "correctIndex": 1},
  {"question": "Quale metodo di ciclo di vita di `StatefulWidget` viene chiamato solo una volta per inizializzare lo stato?", "options": ["dispose()", "build()", "initState()", "didUpdateWidget()"], "correctIndex": 2},
  {"question": "Cosa indica l'operatore `!` (non-null assertion operator) in Dart?", "options": ["Che il valore è sicuramente nullo.", "Forza il tipo a non essere nullable.", "Garantisce al compilatore che il valore non è nullo e procede, altrimenti lancia un runtime error.", "È usato solo per operazioni booleane."], "correctIndex": 2},
  {"question": "Perché è fondamentale usare `WidgetsBinding.instance.addPostFrameCallback` per operazioni che dipendono dal contesto?", "options": ["Per eseguire il codice solo in modalità debug.", "Per assicurarsi che il `context` sia valido prima di eseguire l'operazione, come dopo il rendering del primo frame.", "Per rendere asincrone tutte le chiamate di funzione.", "Per forzare una ricostruzione immediata dell'intero albero dei widget."], "correctIndex": 1},
  {"question": "Qual è il principale scopo di `InheritedWidget`?", "options": ["Gestire le transizioni di pagina (routing).", "Consentire ai widget nell'albero sottostante di accedere ai dati in modo efficiente (state management legacy).", "Creare animazioni complesse a livello di frame.", "Definire il tema visuale dell'intera applicazione."], "correctIndex": 1},
  {"question": "Cosa succede se si chiama `setState()` all'interno del metodo `build()` di un `StatefulWidget`?", "options": ["Viene eseguito un rendering asincrono.", "Si entra in un loop infinito di ricostruzioni (rebuilds).", "L'applicazione si interrompe senza errore.", "Viene automaticamente chiamato `dispose()`."], "correctIndex": 1},
  {"question": "Qual è la differenza chiave tra `StreamBuilder` e `FutureBuilder`?", "options": ["Nessuna, sono interscambiabili.", "`FutureBuilder` gestisce un singolo dato asincrono, `StreamBuilder` gestisce una sequenza di dati nel tempo.", "`FutureBuilder` è per la rete, `StreamBuilder` è per i database locali.", "`StreamBuilder` non richiede un `initialData`."], "correctIndex": 1},
  {"question": "Quale widget viene usato come 'collante' tra i widget Flutter standard e gli elementi del protocollo Scroll?", "options": ["CustomScrollView", "SliverList", "ListView.builder", "ScrollController"], "correctIndex": 0},
  {"question": "Qual è il significato della parola chiave `late` in Dart?", "options": ["Indica una variabile che può cambiare valore in qualsiasi momento.", "Dichiara una variabile che deve essere inizializzata prima del suo primo utilizzo, ma non immediatamente al momento della dichiarazione.", "Definisce una costante di run-time.", "Viene usato per i costruttori factory."], "correctIndex": 1},
  {"question": "In un sistema di gestione dello stato come Provider, quale metodo permette a un widget di accedere a un valore senza ricostruirsi al cambiamento?", "options": ["Provider.of(context)", "context.watch<T>()", "context.read<T>()", "context.select<T, R>()"], "correctIndex": 2},
  {"question": "Quale widget è specificamente progettato per creare intestazioni che si restringono o si espandono durante lo scorrimento?", "options": ["CustomScrollView", "SliverAppBar", "NestedScrollView", "FlexibleSpaceBar"], "correctIndex": 1},
  {"question": "Quale delle seguenti non è una primitiva di disegno base in `CustomPainter`?", "options": ["Canvas.drawRect", "Canvas.drawCircle", "Canvas.drawImage", "Canvas.drawWidget"], "correctIndex": 3},
  {"question": "Cosa gestisce un `GlobalKey` in Flutter?", "options": ["Permette l'accesso allo stato di un widget da qualsiasi punto dell'albero e consente il riposizionamento del widget.", "È usato solo per identificare gli elementi in una lista.", "Definisce il colore primario dell'app.", "Serve per gestire le dipendenze di rete."], "correctIndex": 0},
  {"question": "Quale tecnica è preferibile per gestire un'ampia quantità di elementi in una `ListView`?", "options": ["Creare tutti gli elementi in anticipo in una `ListView` statica.", "Usare `ListView.builder` per ricostruire solo gli elementi visibili (lazy rendering).", "Usare un `SingleChildScrollView` senza un widget figlio.", "Avvolgere la `ListView` in un `Expanded`."], "correctIndex": 1},
  {"question": "Quale classe in Dart è il precursore di tutti i tipi non-nullable?", "options": ["Dynamic", "Void", "Object", "Null"], "correctIndex": 2},
  {"question": "Perché `MediaQuery.of(context)` non dovrebbe essere chiamato direttamente nel metodo `build` del widget radice?", "options": ["Perché il metodo `build` non ha accesso al `context`.", "Perché il `context` del widget radice non è ancora completamente montato e può lanciare un errore di dipendenza.", "Perché il valore della dimensione dello schermo non cambierà mai.", "Per evitare un errore di overflow."], "correctIndex": 1},
  {"question": "Quale classe Flutter fornisce l'accesso all'albero degli elementi, incluso il tema e la navigazione?", "options": ["Widget", "BuildOwner", "BuildContext", "Element"], "correctIndex": 2},
  {"question": "Qual è il ruolo del `Key` nei widget Flutter (locale o globale)?", "options": ["Usato solo per la navigazione tra le pagine.", "Usato dall'algoritmo di diff (riconciliazione) di Flutter per identificare in modo univoco gli elementi che si muovono nell'albero.", "Definisce l'altezza minima di un widget.", "Serve per impostare il font predefinito."], "correctIndex": 1},
  {"question": "Quale widget permette di gestire il back-end nativo quando si interagisce con il canale di comunicazione della piattaforma?", "options": ["MethodChannel", "EventChannel", "BasicMessageChannel", "Tutti i precedenti"], "correctIndex": 3},
  {"question": "Cosa è un 'Isolate' in Dart?", "options": ["Un oggetto che gestisce lo stato di un widget.", "Una memory heap separata che permette l'esecuzione di codice Dart in parallelo senza condividere lo stato (no shared memory).", "Un widget per gestire la navigazione.", "Un tipo di dato generico."], "correctIndex": 1},
  {"question": "Quale proprietà di un `CustomScrollView` permette di definire intestazioni elastiche che si comportano in modo diverso durante lo scorrimento?", "options": ["controller", "slivers", "physics", "shrinkWrap"], "correctIndex": 1},
  {"question": "In un `StatefulWidget`, in quale metodo dovresti pulire le risorse come i `Timer` o i `StreamSubscription`?", "options": ["initState()", "build()", "dispose()", "didChangeDependencies()"], "correctIndex": 2},
  {"question": "Quale widget è progettato per visualizzare un'icona e un testo insieme, specialmente nelle liste o nei menu?", "options": ["Container", "ListTile", "Row", "Expanded"], "correctIndex": 1},
  {"question": "Quale API di Flutter è tipicamente usata per l'internazionalizzazione (I18n)?", "options": ["Flutter Localizations", "Device Manager", "BuildContext.i18n", "MaterialApp.language"], "correctIndex": 0},
  {"question": "Quale widget dovresti usare se hai bisogno di un layout che permetta ai widget di 'piegarsi' sulla riga successiva se non c'è più spazio?", "options": ["Row", "Wrap", "Column", "Stack"], "correctIndex": 1},
  {"question": "Quale sintassi è corretta per dichiarare un `factory constructor` in Dart?", "options": ["ClassName factory();", "factory ClassName() => ...", "ClassName.factory()", "factory ClassName();"], "correctIndex": 1},
  {"question": "Quale widget è il principale responsabile per la gestione dei 'safe areas' (tacche, barre di stato) sullo schermo?", "options": ["Scaffold", "SafeArea", "Container", "AppBar"], "correctIndex": 1},
  {"question": "Cosa fa il `LayoutBuilder` in Flutter?", "options": ["Definisce una navigazione in base al percorso.", "Permette di ricostruire i widget in base alle costrizioni massime che riceve dal widget genitore (ad esempio, larghezza massima).", "Controlla lo scorrimento di un elenco.", "Applica un effetto di dissolvenza (fade) a un'immagine."], "correctIndex": 1},
  {"question": "Quale metodo di `StatefulWidget` viene chiamato quando il widget riceve un nuovo set di dati da un widget padre?", "options": ["initState()", "build()", "didUpdateWidget()", "didChangeDependencies()"], "correctIndex": 2},
  {"question": "Qual è il ruolo dell'oggetto `Paint` in un `CustomPainter`?", "options": ["Definisce l'area in cui disegnare.", "Memorizza le informazioni sugli stili da applicare al disegno (colore, tratto, ecc.).", "Gestisce l'input dell'utente.", "Contiene i dati da visualizzare."], "correctIndex": 1},
  {"question": "Quale widget è usato per creare un'esperienza di scorrimento con due aree scrollabili che condividono un'intestazione (header)?", "options": ["CustomScrollView", "NestedScrollView", "SingleChildScrollView", "TabBarView"], "correctIndex": 1},
  {"question": "Qual è la differenza tra `final` e `const` per le variabili di classe in Dart?", "options": ["Sono identici e interscambiabili.", "`const` deve essere noto al momento della compilazione (compile-time constant), `final` è assegnato una sola volta durante l'esecuzione (run-time constant).", "`final` può essere riassegnato, `const` no.", "`const` è per le primitive, `final` è per gli oggetti."], "correctIndex": 1},
  {"question": "Quale widget è l'alternativa a `InheritedWidget` per la gestione dello stato a livello locale o di sottosezione?", "options": ["ValueListenableBuilder", "StreamBuilder", "FutureBuilder", "Tutti i precedenti"], "correctIndex": 0},
  {"question": "Quale metodo `Navigator` dovresti usare per rimuovere tutte le schermate dallo stack tranne la schermata di destinazione?", "options": ["push()", "pushReplacement()", "pop()", "pushAndRemoveUntil()"], "correctIndex": 3},
  {"question": "Quale widget è specificamente progettato per creare un'esperienza utente coerente con la navigazione basata su schede (tabs)?", "options": ["TabBar", "TabBarView", "DefaultTabController", "Tutti i precedenti"], "correctIndex": 3},
  {"question": "Qual è il principale problema che la keyword `await` risolve in Dart?", "options": ["Gestisce le eccezioni.", "Evita il blocco del thread principale (UI) in attesa del completamento di un'operazione asincrona.", "Garantisce che il codice venga eseguito in parallelo.", "Dichiara una variabile non-nullable."], "correctIndex": 1},
  {"question": "In Flutter, cosa indica il 'Semantic layer'?", "options": ["L'albero dei widget visibili.", "Un layer per l'accessibilità, per supportare screen readers e altri servizi assistivi.", "Il layer che gestisce il layout.", "Il layer che gestisce le animazioni."], "correctIndex": 1},
  {"question": "Qual è il modo corretto per fare riferimento a un widget padre immediatamente superiore nell'albero che è un `InheritedWidget`?", "options": ["Un Widget().getParent()", "Ancestor.of(context)", "MyInheritedWidget.of(context)", "context.ancestorWidget()"], "correctIndex": 2},
  {"question": "Quale metodo di `StatefulWidget` viene chiamato immediatamente dopo `initState()`?", "options": ["build()", "dispose()", "didChangeDependencies()", "didUpdateWidget()"], "correctIndex": 2},
  {"question": "Qual è la differenza principale tra `Padding` e `Container` per aggiungere spazio?", "options": ["Sono identici.", "`Container` ha la proprietà `padding` e supporta `margin` e `decoration`, `Padding` serve solo per lo spazio interno.", "`Padding` è sempre espanso, `Container` no.", "`Container` è per lo spazio esterno, `Padding` per lo spazio interno."], "correctIndex": 1},
  {"question": "Quale classe in Dart è usata per gestire gli errori in un blocco `async`?", "options": ["try-catch", "switch-case", "if-else", "throw-catch"], "correctIndex": 0},
  {"question": "Cosa gestiscono gli 'Slivers' in Flutter?", "options": ["Solo gli effetti di parallasse nelle liste.", "Una porzione di un'area scrollabile, usati per creare layout di scorrimento complessi e performanti.", "L'input di testo.", "Il back-end nativo."], "correctIndex": 1},
  {"question": "Quale proprietà di un `CustomScrollView` definisce se l'area di scorrimento inizia dal basso o dall'alto?", "options": ["scrollDirection", "reverse", "physics", "controller"], "correctIndex": 1},
  {"question": "Quale metodo di `StatefulWidget` viene chiamato quando un widget necessita di ricostruirsi?", "options": ["initState()", "dispose()", "build()", "didChangeDependencies()"], "correctIndex": 2},
  {"question": "Quale widget è usato per rendere i contenuti che superano i limiti del genitore visibili e gestibili, spesso con overflow e clipping?", "options": ["Stack", "OverflowBox", "Container", "ClipRect"], "correctIndex": 1},
  {"question": "Qual è lo scopo del 'Ticker' in Flutter?", "options": ["Gestire lo stato dell'applicazione.", "Fornisce un segnale di notifica a intervalli regolari (solitamente un frame rate) per il funzionamento delle animazioni.", "Controllare la navigazione.", "Permettere l'input da tastiera."], "correctIndex": 1},
  {"question": "Quale proprietà di `ListView.builder` migliora le performance per liste molto lunghe?", "options": ["itemCount", "itemBuilder", "separatorBuilder", "physics"], "correctIndex": 1},
  {"question": "Quale tipo di `Key` è usato per mantenere lo stato di un widget quando viene spostato nell'albero, ma solo all'interno dello stesso genitore?", "options": ["GlobalKey", "ObjectKey", "ValueKey", "None"], "correctIndex": 2},
  {"question": "Quale widget è progettato per visualizzare il contenuto in schede (cards) con bordi arrotondati e ombra?", "options": ["Container", "Card", "Padding", "Material"], "correctIndex": 1},
  {"question": "Qual è il ruolo del `BuildContext` in Flutter?", "options": ["Definisce il tema e lo stile globale.", "È un handle per la posizione di un widget nell'albero dei widget, fornendo accesso a servizi e antenati (come `Theme.of(context)`).", "Contiene i dati di stato di un widget.", "Gestisce l'input dell'utente."], "correctIndex": 1},  
  {"question": "What is a MaterialApp in Flutter?", "options": ["The main widget for a Flutter app providing structure and navigation", "A widget that displays only material design icons", "A widget to draw shapes on the screen", "A widget to manage state of child widgets"], "correctIndex": 0},
  {"question": "What does a StatelessWidget do?", "options": ["Can change its state dynamically", "Does not maintain any state, builds once", "Automatically handles user input", "Stores variables across screens"], "correctIndex": 1},
  {"question": "What does a StatefulWidget allow?", "options": ["A widget that can update its state during runtime", "A widget that never rebuilds", "A widget that only displays text", "A widget to create animations only"], "correctIndex": 0},
  {"question": "Which widget provides safe display area?", "options": ["Column", "Scaffold", "SafeArea", "Container"], "correctIndex": 2},
  {"question": "What is the main difference between Column and Row?", "options": ["Column arranges children vertically, Row horizontally", "Row arranges children vertically, Column horizontally", "Both are identical widgets", "Column is stateful, Row is stateless"], "correctIndex": 0},
  {"question": "What does Expanded widget do?", "options": ["Gives child widget remaining space in a Row/Column", "Wraps widgets without modifying size", "Centers widgets horizontally", "Creates a new Scaffold"], "correctIndex": 0},
  {"question": "Which widget can display an image from assets?", "options": ["Image.png", "Image.network", "Image.asset", "Column.image"], "correctIndex": 2},
  {"question": "Which operator checks if a value is null and provides a default?", "options": ["=>", "!=", "??", "||"], "correctIndex": 2},
  {"question": "What does the => operator do in Dart?", "options": ["Creates a shorthand function or getter", "Checks equality between values", "Assigns null if variable is undefined", "Creates a new widget"], "correctIndex": 0},
  {"question": "What does CrossAxisAlignment.center do in a Column?", "options": ["Aligns children in the center along the horizontal axis", "Aligns children vertically at the top", "Spreads children across the main axis", "Does nothing"], "correctIndex": 0},
  {"question": "What is the purpose of Scaffold in Flutter?", "options": ["Provides a basic visual layout structure for the app", "Manages state of child widgets", "Displays images from the network", "Handles animations"], "correctIndex": 0},
  {"question": "Which widget is used to wrap text with padding?", "options": ["Container", "Padding", "Align", "Expanded"], "correctIndex": 1},
  {"question": "What does MainAxisAlignment.spaceBetween do?", "options": ["Places space evenly between children along main axis", "Centers children on cross axis", "Stacks children on top of each other", "Does nothing"], "correctIndex": 0},
  {"question": "Which widget is used to constrain size and add decoration?", "options": ["Container", "Column", "Row", "Expanded"], "correctIndex": 0},
  {"question": "What is the default scroll direction of SingleChildScrollView?", "options": ["None", "Horizontal", "Diagonal", "Vertical"], "correctIndex": 3},
  {"question": "Which widget centers its child both horizontally and vertically?", "options": ["Center", "Align", "Container", "Column"], "correctIndex": 0},
  {"question": "What does crossAxisAlignment.stretch do?", "options": ["Expands children to fill cross axis", "Centers children vertically", "Aligns children at start", "Does nothing"], "correctIndex": 0},
  {"question": "Which widget is used to make tappable areas?", "options": ["GestureDetector", "InkWell", "Both A and B", "Container"], "correctIndex": 2},
  {"question": "Which widget prevents content from overlapping system UI?", "options": ["SafeArea", "Scaffold", "Container", "Expanded"], "correctIndex": 0},
  {"question": "Which operator checks inequality?", "options": ["!=", "==", "??", "=>"], "correctIndex": 0},
  {"question": "Which widget arranges children horizontally?", "options": ["Stack", "Column", "Row", "Container"], "correctIndex": 2},
  {"question": "Which widget arranges children vertically?", "options": ["Column", "Row", "Stack", "Container"], "correctIndex": 0},
  {"question": "Which widget allows overlapping children?", "options": ["Expanded", "Row", "Column", "Stack"], "correctIndex": 3},
  {"question": "What does Navigator.pushNamed do?", "options": ["Navigates to a named route", "Pushes a widget onto the widget tree", "Adds padding to widgets", "Centers a widget"], "correctIndex": 0},
  {"question": "Which widget allows flexible space in a Row or Column?", "options": ["Expanded", "Container", "Padding", "Align"], "correctIndex": 0},
  {"question": "Which widget displays a scrollable list of children?", "options": ["Scaffold", "Column", "ListView", "Container"], "correctIndex": 2},
  {"question": "What does the ternary operator ? : do?", "options": ["Selects between two values based on a condition", "Checks equality", "Creates a function", "Checks for null"], "correctIndex": 0},
  {"question": "Which keyword is used to define a constructor in Dart?", "options": ["return", "void", "ClassName()", "final"], "correctIndex": 2},
  {"question": "Which property of Image.asset sets its width?", "options": ["width", "size", "height", "scale"], "correctIndex": 0},
  {"question": "Which property of Container sets its background color?", "options": ["color", "background", "decoration", "fill"], "correctIndex": 0},
{"question":"What does the '??' operator do in Dart?","options":["Checks for null and provides a default","Compares two values","Defines a function","Creates a class"],"correctIndex":0},
  {"question":"Which widget is used to make a scrollable list?","options":["SizedBox","Column","Row","ListView"],"correctIndex":3},
  {"question":"How do you make a widget respond to a tap?","options":["Wrap it in GestureDetector","Use Column","Use Expanded","Set height"],"correctIndex":0},
  {"question":"What does StatelessWidget mean?","options":["Widget that does not change state","Widget that rebuilds constantly","Widget that holds mutable state","Widget for animations"],"correctIndex":0},
  {"question":"Which property sets padding inside a Container?","options":["padding","margin","alignment","height"],"correctIndex":0},
  {"question":"What does the '=>' syntax do in Dart?","options":["Creates a shorthand function","Defines a class","Imports a library","Declares a variable"],"correctIndex":0},
  {"question":"Which widget arranges its children vertically?","options":["Row","Column","Stack","Container"],"correctIndex":1},
  {"question":"Which widget arranges its children horizontally?","options":["Expanded","Column","Stack","Row"],"correctIndex":3},
  {"question":"How do you center a widget inside another widget?","options":["Use Center","Use Align with Alignment.topLeft","Use Expanded","Use Scaffold"],"correctIndex":0},
  {"question":"Which property in Text sets the style?","options":["style","textAlign","decoration","overflow"],"correctIndex":0},
  {"question":"Which widget adds spacing between widgets?","options":["Row","Container","SizedBox","Column"],"correctIndex":2},
  {"question":"Which widget expands to fill available space?","options":["Text","Container","Padding","Expanded"],"correctIndex":3},
  {"question":"How do you set a background color for a Container?","options":["color property","padding","child","alignment"],"correctIndex":0},
  {"question":"Which widget prevents content from overlapping device notches?","options":["SafeArea","Center","Stack","Expanded"],"correctIndex":0},
  {"question":"What is the default scroll direction for SingleChildScrollView?","options":["Vertical","Horizontal","Diagonal","None"],"correctIndex":0},
  {"question":"How do you load an image from assets?","options":["Image.asset('way')","Image.network('url')","Image.asset('path')","Text('image')"],"correctIndex":2},
  {"question":"Which operator checks if two values are not equal?","options":["==","!=",">","<"],"correctIndex":1},
  {"question":"Which widget allows multiple children stacked on top of each other?","options":["Column","Stack","Row","Container"],"correctIndex":1},
  {"question":"Which widget allows you to add bottom navigation?","options":["Scaffold","AppBar","Container","BottomAppBar"],"correctIndex":3},
  {"question":"How do you make a widget clickable using a function?","options":["alignmentk","padding","onTap or onPressed callback","style"],"correctIndex":2},
    {"question":"Which widget provides the basic app structure and theme?","options":["Container","MaterialApp","Column","Text"],"correctIndex":1},
    {"question":"What is the entry point of a Flutter app?","options":["AppBar()","runApp() function","Scaffold","main() function"],"correctIndex":3},
    {"question":"Which widget allows dynamic content that can change state?","options":["StatefulWidget","StatelessWidget","Column","Container"],"correctIndex":0},
    {"question":"Which widget should be used for simple static UI?","options":["Expanded","StatefulWidget","StatelessWidget","Stack"],"correctIndex":2},
    {"question":"How do you navigate to a new screen in Flutter?","options":["Navigator.push","runApp","setState","Expanded"],"correctIndex":0},
    {"question":"Which property in Text sets text alignment?","options":["textAlign","style","overflow","decoration"],"correctIndex":0},
    {"question":"What does the setState() method do?","options":["Updates the UI when state changes","Builds a Scaffold","Defines a function","Aligns widgets"],"correctIndex":0},
    {"question":"Which widget is used to create a flexible layout that fills available space?","options":["Expanded","Container","Column","Row"],"correctIndex":0},
    {"question":"Which widget provides padding around its child?","options":["Padding","Container","Center","Text"],"correctIndex":0},
    {"question":"What widget should you use for a scrollable vertical list?","options":["ListView","Row","Column","Container"],"correctIndex":0},
    {"question":"Which widget allows stacking multiple widgets on top of each other?","options":["Stack","Column","Row","Container"],"correctIndex":0},
    {"question":"What is the purpose of Scaffold?","options":["Provides a basic visual layout structure","Defines a Text widget","Handles gestures","Creates animations"],"correctIndex":0},
    {"question":"How do you load an image from the network?","options":["Image.network('url')","Image.asset('path')","Container.network('url')","Text('image')"],"correctIndex":0},
    {"question":"Which widget allows multiple children in a horizontal layout?","options":["Row","Column","Stack","Container"],"correctIndex":0},
    {"question":"Which widget prevents content from being hidden by notches or status bars?","options":["SafeArea","Center","Expanded","Stack"],"correctIndex":0},
    {"question":"Which widget allows for adding shadows or borders?","options":["Container","Column","Row","Text"],"correctIndex":0},
    {"question":"How do you make a widget clickable?","options":["Wrap with GestureDetector","Use Column","Use Row","Use Padding"],"correctIndex":0},
    {"question":"Which widget is used for simple text display?","options":["Text","Container","Column","Row"],"correctIndex":0},
    {"question":"Which property in Container sets its width and height?","options":["width and height","padding","alignment","color"],"correctIndex":0},
    {"question":"Which widget automatically sizes itself to its child?","options":["Container","Expanded","Column","Row"],"correctIndex":0},
    {"question":"Which widget sets the background color of a screen?","options":["Container","Text","Row","Column"],"correctIndex":0},
    {"question":"What does the '!' operator do in Dart?","options":["Non-null assertion","Logical NOT","Null check","Comparison"],"correctIndex":0},
    {"question":"Which widget allows scrolling horizontally?","options":["SingleChildScrollView with scrollDirection","Column","Row","Container"],"correctIndex":0},
    {"question":"Which widget provides a clickable button with text?","options":["ElevatedButton","Text","Container","Row"],"correctIndex":0},
    {"question":"Which widget wraps its child to center it?","options":["Center","Align","Padding","Container"],"correctIndex":0},
    {"question":"Which widget is used to provide a fixed space between widgets?","options":["SizedBox","Container","Column","Row"],"correctIndex":0},
    {"question":"Which widget lays out children relative to edges?","options":["Align","Center","Column","Row"],"correctIndex":0},
    {"question":"Which property of Icon sets its size?","options":["size","color","alignment","padding"],"correctIndex":0},
    {"question":"Which widget is used to create an app bar?","options":["AppBar","Container","Column","Row"],"correctIndex":0},
    {"question":"Which method is used to rebuild a widget in StatefulWidget?","options":["setState()","build()","initState()","dispose()"],"correctIndex":0},
    {"question":"Which widget displays a floating action button?","options":["FloatingActionButton","AppBar","Container","Column"],"correctIndex":0},
    {"question":"Which property in Column controls horizontal alignment?","options":["crossAxisAlignment","mainAxisAlignment","alignment","padding"],"correctIndex":0},
    {"question":"Which property in Column controls vertical alignment?","options":["mainAxisAlignment","crossAxisAlignment","alignment","padding"],"correctIndex":0},
    {"question":"Which widget wraps content to scroll vertically?","options":["SingleChildScrollView","Row","Column","Container"],"correctIndex":0},
    {"question":"Which property of Row aligns children vertically?","options":["crossAxisAlignment","mainAxisAlignment","alignment","padding"],"correctIndex":0},
    {"question":"Which widget displays a circular progress indicator?","options":["CircularProgressIndicator","LinearProgressIndicator","Container","Column"],"correctIndex":0},
    {"question":"Which property sets margin in Container?","options":["margin","padding","alignment","width"],"correctIndex":0},
    {"question":"Which widget allows stacking widgets with positioned children?","options":["Stack with Positioned","Column","Row","Container"],"correctIndex":0},
    {"question":"Which property sets text color in TextStyle?","options":["color","fontSize","fontWeight","decoration"],"correctIndex":0},
    {"question":"Which operator checks equality in Dart?","options":["==","!=","<",">"],"correctIndex":0},
    {"question":"Which operator is used to assign a default value if null?","options":["??","==","!=","=>"],"correctIndex":0},
    {"question":"Which property sets border radius in Container decoration?","options":["borderRadius","padding","margin","alignment"],"correctIndex":0},
    {"question":"Which widget allows multiple children in a single scrollable column?","options":["ListView","Column","Row","Container"],"correctIndex":0},
    {"question":"Which widget is used to add a bottom navigation bar?","options":["BottomAppBar","AppBar","Container","Column"],"correctIndex":0},
    {"question":"Which widget allows you to detect swipe gestures?","options":["GestureDetector","Container","Column","Row"],"correctIndex":0},
    {"question":"Which widget is used to show an image from assets?","options":["Image.asset","Image.network","Container","Text"],"correctIndex":0},
    {"question":"Which property sets font size in TextStyle?","options":["fontSize","color","fontWeight","decoration"],"correctIndex":0},
    {"question":"Which widget can overlap children in a z-axis manner?","options":["Stack","Column","Row","Container"],"correctIndex":0},
    {"question":"Which widget is used for responsive layout that expands?","options":["Expanded","Container","Column","Row"],"correctIndex":0},
    {"question":"Which method initializes state in StatefulWidget?","options":["initState()","build()","setState()","dispose()"],"correctIndex":0},
    {"question":"Which method is called when a StatefulWidget is removed?","options":["dispose()","initState()","build()","setState()"],"correctIndex":0},
    {"question":"Which widget allows conditional rendering with a single child?","options":["Visibility","Expanded","Container","Row"],"correctIndex":0},
    {"question":"Which property defines the main axis in Row or Column?","options":["mainAxisAlignment","crossAxisAlignment","alignment","padding"],"correctIndex":0},
    {"question":"Which property in Container defines alignment of its child?","options":["alignment","padding","margin","color"],"correctIndex":0},
    {"question":"Which operator is used for fat arrow syntax in Dart?","options":["=>","??","!=","=="],"correctIndex":0},
    {"question":"Which widget is used to create a divider line?","options":["Divider","Container","SizedBox","Column"],"correctIndex":0},
    {"question":"Which widget allows rounded corners and shadows?","options":["Card","Container","Column","Row"],"correctIndex":0},
    {"question":"Which widget is used to display a list of items efficiently?","options":["ListView.builder","Column","Row","Container"],"correctIndex":0},
    {"question":"Which property in Icon sets its color?","options":["color","size","alignment","padding"],"correctIndex":0},
    {"question":"Which widget provides spacing around children?","options":["Padding","SizedBox","Container","Expanded"],"correctIndex":0},
    {"question": "Which widget displays a list of items in a scrolling view?", "options": ["ListView", "Column", "GridView", "Stack"], "correctIndex": 0},
    {"question": "What widget is used to make a widget tappable?", "options": ["GestureDetector", "InkWell", "Container", "Padding"], "correctIndex": 1},
    {"question": "Which widget is used for aligning children widgets?", "options": ["Align", "Center", "Row", "Column"], "correctIndex": 0},
    {"question": "What does the 'debugShowCheckedModeBanner' property do?", "options": ["Shows a debug banner in checked mode", "Shows a splash screen", "Enables debug logging", "Stops the app from crashing"], "correctIndex": 0},
    {"question": "Which widget can be used to show a simple floating action button?", "options": ["FloatingActionButton", "RaisedButton", "IconButton", "FlatButton"], "correctIndex": 0},
    {"question": "Which of the following widgets does not provide scrolling capabilities?", "options": ["Container", "ListView", "SingleChildScrollView", "GridView"], "correctIndex": 0},
    {"question": "What does the 'shrinkWrap' property do in a ListView?", "options": ["Makes the ListView wrap its content", "Makes ListView scroll horizontally", "Disables scrolling", "Makes the ListView static"], "correctIndex": 0},
    {"question": "What is the purpose of the 'Expanded' widget?", "options": ["Expands the child to fill available space", "Shrinks the child to fit content", "Adds padding to the widget", "Centers the child widget"], "correctIndex": 0},
    {"question": "Which widget is used to build complex user interfaces?", "options": ["CustomPaint", "MaterialApp", "Scaffold", "FlutterLogo"], "correctIndex": 2},
    {"question": "What is the main purpose of the 'Navigator' widget?", "options": ["Managing screen transitions", "Handling state", "Displaying images", "Controlling layout"], "correctIndex": 0},
    {"question": "What does the 'Container' widget allow you to do?", "options": ["Customize size, decoration, and padding", "Make widgets tappable", "Create animations", "Display static images"], "correctIndex": 0},
    {"question": "What is a common way to pass data between Flutter screens?", "options": ["Using Navigator.push and passing arguments", "Using GlobalKey", "Using InheritedWidget", "By passing stateful widgets directly"], "correctIndex": 0},
    {"question": "What does the 'setState' method do in Flutter?", "options": ["Triggers a re-render of a StatefulWidget", "Sets initial state of a widget", "Sets widget properties", "Checks if widget needs to be rebuilt"], "correctIndex": 0},
    {"question": "What does the 'safeArea' widget do?", "options": ["Ensures content is not obstructed by system UI", "Wraps widgets with a custom border", "Handles scrolling automatically", "Centers widgets horizontally"], "correctIndex": 0},
    {"question": "Which widget is used to align widgets both horizontally and vertically?", "options": ["Center", "Align", "Container", "Row"], "correctIndex": 0},
    {"question": "What does the 'Row' widget do?", "options": ["Arranges children horizontally", "Arranges children vertically", "Stacks children on top of each other", "Displays images in a grid"], "correctIndex": 0},
    {"question": "Which widget can make a container with rounded corners?", "options": ["Container with BoxDecoration", "Text", "Column", "Row"], "correctIndex": 0},
    {"question": "What is the purpose of the 'Flexible' widget?", "options": ["Allows a child to fit within a Row or Column", "Displays widgets with equal width", "Shrinks widgets", "Centers children"], "correctIndex": 0},
    {"question": "What does the 'ListView.builder' constructor do?", "options": ["Creates a scrolling list with dynamic content", "Builds a simple static list", "Displays a list in a grid", "Displays a list of static widgets"], "correctIndex": 0},
    {"question": "What is the use of 'ThemeData' in Flutter?", "options": ["Defines the visual properties of the app", "Handles user input", "Creates custom widgets", "Manages state across the app"], "correctIndex": 0},
    {"question": "Which widget is used to create a scrollable container?", "options": ["SingleChildScrollView", "Column", "Container", "Padding"], "correctIndex": 0},
    {"question": "What does the 'Text' widget display?", "options": ["Displays a string of text", "Displays an image", "Displays a button", "Displays an icon"], "correctIndex": 0},
    {"question": "What is a 'StreamBuilder' used for in Flutter?", "options": ["Building widgets based on stream data", "Displaying data in a list", "Showing images in a list", "Handling network requests"], "correctIndex": 0},
    {"question": "What is 'InheritedWidget' used for?", "options": ["Passing data down the widget tree", "Rendering a list of items", "Displaying images", "Managing state of widgets"], "correctIndex": 0},
    {"question": "What is the 'default' state of a widget in Flutter?", "options": ["The widget's properties and initial state", "The first frame of the widget", "The user's first interaction with the widget", "A static value"], "correctIndex": 0},
    {"question": "Which widget is used to create a scrollable grid of items?", "options": ["GridView", "ListView", "Column", "Stack"], "correctIndex": 0},
    {"question": "Which widget allows you to build a dynamic form?", "options": ["Form", "Column", "Row", "Stack"], "correctIndex": 0},
    {"question": "Which of the following widgets allows for animation?", "options": ["AnimatedContainer", "Column", "Scaffold", "SafeArea"], "correctIndex": 0},
    {"question": "What does the 'MediaQuery' class provide?", "options": ["Provides information about the screen size and device", "Manages app navigation", "Manages stateful widgets", "Displays a loading indicator"], "correctIndex": 0},
    {"question": "Which widget is used to make an image resizable?", "options": ["Image", "Image.asset", "Image.network", "ClipRRect"], "correctIndex": 1},
    {"question": "What does 'TextFormField' widget do?", "options": ["Allows text input from the user", "Displays static text", "Shows a button", "Displays a form"], "correctIndex": 0},
    {"question": "Which property is used to change the padding of a widget?", "options": ["padding", "margin", "alignment", "decorations"], "correctIndex": 0},
    {"question": "What does the 'clipBehavior' property of a widget do?", "options": ["Controls how the widget clips its child", "Adds a shadow to the widget", "Aligns the widget", "Makes the widget scrollable"], "correctIndex": 0},
    {"question": "What is the default behavior of 'TextField' widget?", "options": ["Allows text input", "Displays a label", "Creates a password input", "Shows an icon"], "correctIndex": 0},
    {"question": "Which widget can be used to make a widget clickable?", "options": ["GestureDetector", "InkWell", "Container", "Column"], "correctIndex": 1},
    {"question": "Which of these widgets is used to display simple button-like widgets?", "options": ["FlatButton", "Container", "Column", "Row"], "correctIndex": 0},
    {"question": "What does the 'Scrollable' widget do?", "options": ["Makes content scrollable", "Renders widgets", "Puts widgets into a grid", "Stacks widgets on top of each other"], "correctIndex": 0},
    {"question": "What does the 'Spacer' widget do?", "options": ["Creates empty space in a layout", "Aligns widgets", "Displays an image", "Manages state"], "correctIndex": 0},
    {"question": "Which widget is used to display content that fills the entire screen?", "options": ["Scaffold", "Container", "Column", "Expanded"], "correctIndex": 0},
    {"question": "What is the main role of the 'Drawer' widget?", "options": ["Provides a slide-out navigation panel", "Displays a logo", "Adds a list of options", "Creates a new page"], "correctIndex": 0},
    {"question": "Which widget should you use to customize the app's navigation?", "options": ["Navigator", "Drawer", "TabBar", "PageView"], "correctIndex": 0},

        {"question": "What does the 'MaterialPageRoute' do?", "options": ["It creates a route to navigate to another screen", "It displays a loading screen", "It defines the app's theme", "It controls screen orientation"], "correctIndex": 0},
        {"question": "Which widget is used to create a flexible space in an app bar?", "options": ["FlexibleSpaceBar", "SliverAppBar", "AppBar", "Expanded"], "correctIndex": 1},
        {"question": "What is the default value for the 'mainAxisAlignment' property in a Column?", "options": ["MainAxisAlignment.start", "MainAxisAlignment.center", "MainAxisAlignment.spaceBetween", "MainAxisAlignment.end"], "correctIndex": 0},
        {"question": "Which widget can display a list of widgets in a grid format?", "options": ["GridView", "ListView", "Column", "Stack"], "correctIndex": 0},
        {"question": "What does the 'showDialog' function do in Flutter?", "options": ["Displays a dialog box", "Pushes a new route", "Shows a snack bar", "Displays an alert box"], "correctIndex": 0},
        {"question": "What does the 'ValueListenableBuilder' widget do?", "options": ["Listens for changes to a ValueNotifier", "Updates a widget based on the user's input", "Displays a list of items", "Creates a scrollable container"], "correctIndex": 0},
        {"question": "Which property of a 'Container' widget is used to apply a shadow?", "options": ["boxShadow", "decoration", "padding", "alignment"], "correctIndex": 0},
        {"question": "Which widget is used to create a sticky header in a scrollable list?", "options": ["SliverAppBar", "ListView", "Stack", "Container"], "correctIndex": 0},
        {"question": "What is the main purpose of the 'FutureBuilder' widget?", "options": ["It builds a widget based on the result of a Future", "It creates a list of widgets", "It builds a widget for each item in a list", "It animates widgets"], "correctIndex": 0},
        {"question": "Which widget allows you to show a circular progress indicator?", "options": ["CircularProgressIndicator", "LinearProgressIndicator", "ProgressBar", "LoadingSpinner"], "correctIndex": 0},
        {"question": "What does the 'onPressed' property in a 'FlatButton' do?", "options": ["Defines the function to be executed when the button is pressed", "Sets the button's color", "Defines the button's size", "Sets the button's text"], "correctIndex": 0},
        {"question": "What does the 'AnimatedContainer' widget do?", "options": ["Animates the properties of a container", "Creates a new route", "Changes a widget's position", "Handles tap gestures"], "correctIndex": 0},
        {"question": "What is the purpose of the 'Scaffold' widget?", "options": ["Provides a structure for the app layout", "Displays a logo", "Hides the app bar", "Renders a widget in a container"], "correctIndex": 0},
        {"question": "Which property of 'Text' widget is used to define the text color?", "options": ["style", "color", "decoration", "fontSize"], "correctIndex": 1},
        {"question": "What is the default alignment for widgets in a Column?", "options": ["Start", "Center", "End", "Stretch"], "correctIndex": 0},
        {"question": "Which widget should you use to create a gradient background?", "options": ["Container with BoxDecoration", "Column", "Row", "Stack"], "correctIndex": 0},
        {"question": "Which property of the 'Container' widget controls its size?", "options": ["width and height", "padding", "alignment", "decoration"], "correctIndex": 0},
        {"question": "What does the 'FlutterLogo' widget display?", "options": ["Flutter logo", "App logo", "A static image", "A clickable icon"], "correctIndex": 0},
        {"question": "Which widget is used to create a scrollable list that arranges items in rows and columns?", "options": ["GridView", "ListView", "Column", "Row"], "correctIndex": 0},
        {"question": "What does the 'Wrap' widget do?", "options": ["Arranges children in horizontal or vertical lines, wrapping when space is filled", "Aligns children", "Displays children in a list", "Displays children in a grid"], "correctIndex": 0},
        {"question": "Which widget is used to apply a border to a widget?", "options": ["BoxDecoration", "Container", "Padding", "Align"], "correctIndex": 0},
        {"question": "Which of the following is used to create a drawer navigation menu?", "options": ["Drawer", "AppBar", "SliverList", "Column"], "correctIndex": 0},
        {"question": "What does the 'Navigator.pop' function do?", "options": ["Closes the current screen", "Shows a new screen", "Displays a dialog", "Stops the app"], "correctIndex": 0},
        {"question": "What widget should you use to display text with multiple styles?", "options": ["RichText", "Text", "Column", "Row"], "correctIndex": 0},
        {"question": "Which widget is used to define an app's theme?", "options": ["ThemeData", "Scaffold", "MaterialPageRoute", "Column"], "correctIndex": 0},
        {"question": "What does the 'Column' widget do?", "options": ["Arranges children vertically", "Arranges children horizontally", "Stacks children", "Creates a scrollable view"], "correctIndex": 0},
        {"question": "What does the 'Row' widget do?", "options": ["Arranges children horizontally", "Arranges children vertically", "Stacks children", "Creates a scrollable view"], "correctIndex": 0},
        {"question": "Which widget is used to add padding around a widget?", "options": ["Padding", "Margin", "Align", "Container"], "correctIndex": 0},
        {"question": "What does the 'GestureDetector' widget do?", "options": ["Detects gestures such as taps and drags", "Aligns widgets", "Creates a scrollable area", "Displays text"], "correctIndex": 0},
        {"question": "Which widget is used to add space between widgets in a layout?", "options": ["SizedBox", "Padding", "Column", "Row"], "correctIndex": 0},
        {"question": "What does the 'Stack' widget do?", "options": ["Stacks widgets on top of each other", "Aligns widgets", "Arranges widgets in a column", "Displays widgets horizontally"], "correctIndex": 0},
        {"question": "Which property of 'Column' widget arranges children widgets?", "options": ["mainAxisAlignment", "crossAxisAlignment", "padding", "decoration"], "correctIndex": 0},
        {"question": "Which of these widgets creates a button with material ripple effect?", "options": ["InkWell", "FlatButton", "IconButton", "RaisedButton"], "correctIndex": 0},
        {"question": "Which property of a 'TextField' widget allows you to set a placeholder text?", "options": ["hintText", "labelText", "controller", "style"], "correctIndex": 0},
        {"question": "Which widget is used to create a draggable widget?", "options": ["Draggable", "Container", "GestureDetector", "Stack"], "correctIndex": 0},
        {"question": "What does the 'ClipRRect' widget do?", "options": ["Rounds the corners of a widget", "Aligns a widget", "Creates a circular widget", "Displays a widget in a grid"], "correctIndex": 0},
        {"question": "Which widget is used to create a scrollable list of images?", "options": ["ListView", "Column", "Stack", "GridView"], "correctIndex": 0},
        {"question": "What is the main use of the 'StatefulWidget' class?", "options": ["Widgets that can change their state over time", "Widgets that do not need to be rebuilt", "Widgets that display static content", "Widgets that handle layout issues"], "correctIndex": 0},
        {"question": "Which of the following is the primary use of 'SliverList'?", "options": ["Displaying a list of widgets that can scroll", "Aligning widgets in a column", "Displaying widgets in a grid", "Creating a background for the app"], "correctIndex": 0},
        {"question": "What does 'TabBar' do?", "options": ["Displays tabs for navigation", "Displays a list of items", "Displays a banner", "Displays a dropdown list"], "correctIndex": 0},
        {"question": "Which widget is used to show a simple alert box?", "options": ["AlertDialog", "SnackBar", "Dialog", "PopupMenuButton"], "correctIndex": 0},
        {"question": "Which widget can make content scrollable both horizontally and vertically?", "options": ["SingleChildScrollView", "ListView", "GridView", "Container"], "correctIndex": 0}
        ]
      

